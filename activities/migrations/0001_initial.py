# Generated by Django 3.1.12 on 2021-06-21 08:46

from django.db import migrations, models
import django.db.models.deletion
import modelcluster.fields
import uuid
import wagtail.contrib.table_block.blocks
import wagtail.blocks
import wagtail.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('wagtailimages', '0023_add_choose_permissions'),
        ('wagtailcore', '0062_comment_models_and_pagesubscription'),
        ('taggit', '0003_taggeditem_add_unique_index'),
    ]

    operations = [
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('abstract', wagtail.fields.RichTextField(blank=True, help_text='200 words', verbose_name='Abstract')),
                ('acknowledgement', models.CharField(blank=True, max_length=255)),
                ('teaser', models.TextField(blank=True, help_text='Maximum 2 sentences! Maybe what and how?', verbose_name='Teaser')),
                ('goals', wagtail.fields.RichTextField()),
                ('objectives', wagtail.fields.RichTextField(verbose_name='Learning Objectives')),
                ('evaluation', wagtail.fields.StreamField([('richtext', wagtail.blocks.RichTextBlock()), ('htmltext', wagtail.blocks.RawHTMLBlock()), ('table', wagtail.contrib.table_block.blocks.TableBlock(template='home/partials/table_template.html'))], help_text='If the teacher/educator wants to evaluate the impact of the activity, how can she/he do it?')),
                ('materials', wagtail.fields.StreamField([('richtext', wagtail.blocks.RichTextBlock()), ('htmltext', wagtail.blocks.RawHTMLBlock()), ('table', wagtail.contrib.table_block.blocks.TableBlock(template='home/partials/table_template.html'))], blank=True, help_text='Please indicate costs and/or suppliers if possible', verbose_name='List of material')),
                ('background', wagtail.fields.StreamField([('richtext', wagtail.blocks.RichTextBlock()), ('htmltext', wagtail.blocks.RawHTMLBlock()), ('table', wagtail.contrib.table_block.blocks.TableBlock(template='home/partials/table_template.html'))], verbose_name='Background Information')),
                ('fulldesc', wagtail.fields.StreamField([('richtext', wagtail.blocks.RichTextBlock()), ('htmltext', wagtail.blocks.RawHTMLBlock()), ('table', wagtail.contrib.table_block.blocks.TableBlock(template='home/partials/table_template.html'))], verbose_name='Full description of the activity')),
                ('curriculum', wagtail.fields.StreamField([('richtext', wagtail.blocks.RichTextBlock()), ('htmltext', wagtail.blocks.RawHTMLBlock()), ('table', wagtail.contrib.table_block.blocks.TableBlock(template='home/partials/table_template.html'))], blank=True, help_text='Please indicate which country', verbose_name='Connection to school curriculum')),
                ('additional_information', wagtail.fields.StreamField([('richtext', wagtail.blocks.RichTextBlock()), ('htmltext', wagtail.blocks.RawHTMLBlock()), ('table', wagtail.contrib.table_block.blocks.TableBlock(template='home/partials/table_template.html'))], blank=True, help_text='Notes, Tips, Resources, Follow-up, Questions, Safety Requirements, Variations')),
                ('conclusion', wagtail.fields.RichTextField()),
                ('short_desc_material', wagtail.fields.RichTextField(blank=True, verbose_name='Short description of Suplementary material')),
                ('further_reading', wagtail.fields.RichTextField(blank=True, default='', verbose_name='Further reading')),
                ('reference', wagtail.fields.RichTextField(blank=True, verbose_name='References')),
                ('pdf', models.FileField(blank=True, help_text='PDF will be autogenerated after publication. Do not upload one.', null=True, upload_to='pdf/')),
                ('code', models.CharField(help_text='The 4 digit code that identifies the Activity, in the format "YY##": year, folowed by sequential number.', max_length=4)),
                ('doi', models.CharField(blank=True, help_text='Digital Object Identifier, in the format XXXX/YYYY. See http://www.doi.org/', max_length=50, verbose_name='DOI')),
                ('original_author', models.CharField(blank=True, max_length=255, null=True, verbose_name='Original Author of the activity (if not the authors listed above')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='ActivityHome',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='Institution',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('description', wagtail.fields.RichTextField(blank=True, help_text='Text to appear in Institution page', null=True)),
                ('fullname', models.CharField(blank=True, help_text='If set, the full name will be used in some places instead of the name', max_length=255)),
                ('country', models.CharField(blank=True, max_length=255, null=True)),
                ('url', models.URLField(blank=True, max_length=255, null=True)),
                ('logo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('citable_name', models.CharField(blank=True, help_text='Required for astroEDU activities', max_length=255)),
                ('email', models.EmailField(max_length=255)),
                ('institution', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='activities.institution')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Keyword',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_object', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='keyword_items', to='activities.activity')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activities_keyword_items', to='taggit.tag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AuthorInstitution',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='authors', to='activities.activity')),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='activities.person')),
                ('institution', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='activities.institution')),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('translation_key', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('title', models.CharField(max_length=255)),
                ('group', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=10)),
                ('locale', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='wagtailcore.locale')),
            ],
            options={
                'unique_together': {('translation_key', 'locale')},
            },
        ),
    ]
